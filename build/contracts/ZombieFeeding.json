{
  "contractName": "ZombieFeeding",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint32"
        },
        {
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "name": "winCount",
          "type": "uint16"
        },
        {
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint32\"},{\"name\":\"readyTime\",\"type\":\"uint32\"},{\"name\":\"winCount\",\"type\":\"uint16\"},{\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/zombiefeeding.sol\":\"ZombieFeeding\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/erc721.sol\":{\"keccak256\":\"0xe9218ffc43e18cf05b21a97e10db252a61e20e91467ef71bc1e4cc2ee6726a79\",\"urls\":[\"bzzr://cb9aa70f9302599935cf3dd423fe552c1d64a12ed5dd3dd37841fef9fa786742\"]},\"project:/contracts/ownable.sol\":{\"keccak256\":\"0x48b9aba60b0374f6e0ed5d378f3ebac13f4518b0bcdfc44ce489c172ca47078c\",\"urls\":[\"bzzr://a06f6e67c93d1b795cdc96a2fd2fdab3ee4cdd7c04a3d2de525cd9290c99fa4e\"]},\"project:/contracts/safemath.sol\":{\"keccak256\":\"0xc1bcca68fae1fae647e4fd8daa394f978691ae34ffbd07b920b66f05b16556c8\",\"urls\":[\"bzzr://20c2a2ca2901dea117898d387b578a145c366cde32d073f0df475314d8bc088f\"]},\"project:/contracts/zombiefactory.sol\":{\"keccak256\":\"0xafb375456db5bd230acd3eca9adf2dd507f31b3db4b1a96bfeef61897581b7f6\",\"urls\":[\"bzzr://1049a4abb53d77c3a27869cec4ba2c257e08df89a7acc07cc3b35ac7ac931c36\"]},\"project:/contracts/zombiefeeding.sol\":{\"keccak256\":\"0x737d6bd895e0789f780218741cc11496583c7c8493f6db45537823b832353847\",\"urls\":[\"bzzr://aa70fbd11d252f91608f59c7fa1a2afaa582269629aec68ff14cf2afc4a70e44\"]},\"project:/contracts/zombieownership.sol\":{\"keccak256\":\"0x9a6561bc90d38f0cfba451777b00a9f049a04fd66393be5696581418d6939671\",\"urls\":[\"bzzr://ba47eab025a7f78d55853c3d38da6a932dc744960e4642da121ff868a7a90a94\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556001600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36111db806100e26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100b45780632052465e146100f457806323b872dd146101e5578063528b7b8f146102455780636352211e146102b257806370a082311461031f578063715018a6146103765780637bff0a011461038d5780638da5cb5b146103f65780638f32d59b1461044d578063f2fde38b1461047c575b600080fd5b6100f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b005b34801561010057600080fd5b5061011f600480360381019080803590602001909291905050506105df565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101a557808201518184015260208101905061018a565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610243600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106fe565b005b34801561025157600080fd5b50610270600480360381019080803590602001909291905050506107e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102be57600080fd5b506102dd60048036038101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032b57600080fd5b50610360600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610854565b6040518082815260200191505060405180910390f35b34801561038257600080fd5b5061038b61089d565b005b34801561039957600080fd5b506103f4600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061096f565b005b34801561040257600080fd5b5061040b61099b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045957600080fd5b506104626109c4565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b506104bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a1b565b005b806005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561052d57600080fd5b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6004818154811015156105ee57fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069a5780601f1061066f5761010080835404028352916020019161069a565b820191906000526020600020905b81548152906001019060200180831161067d57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107c957503373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15156107d457600080fd5b6107df838383610a3a565b505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108a56109c4565b15156108b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061097a82610c18565b905060648181151561098857fe5b06810390506109978282610d06565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610a236109c4565b1515610a2e57600080fd5b610a3781610fd9565b50565b610a8d6001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110d390919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b236001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f190919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080826040516020018082805190602001908083835b602083101515610c545780518252602082019150602081019050602083039250610c2f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515610cbd5780518252602082019150602081019050602083039250610c98565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004905060025481811515610cfd57fe5b06915050919050565b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190610d9c92919061110a565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ee56001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110d390919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610f98578082015181840152602081019050610f7d565b50505050905090810190601f168015610fc55780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561101557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101515156110e757fe5b8091505092915050565b60008282111515156110ff57fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061114b57805160ff1916838001178555611179565b82800160010185558215611179579182015b8281111561117857825182559160200191906001019061115d565b5b509050611186919061118a565b5090565b6111ac91905b808211156111a8576000816000905550600101611190565b5090565b905600a165627a7a7230582091fb5fe7e25a22b825283770c3a9549c02dfa42cdea1210628272d9e9b0247d20029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100b45780632052465e146100f457806323b872dd146101e5578063528b7b8f146102455780636352211e146102b257806370a082311461031f578063715018a6146103765780637bff0a011461038d5780638da5cb5b146103f65780638f32d59b1461044d578063f2fde38b1461047c575b600080fd5b6100f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b005b34801561010057600080fd5b5061011f600480360381019080803590602001909291905050506105df565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101a557808201518184015260208101905061018a565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610243600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106fe565b005b34801561025157600080fd5b50610270600480360381019080803590602001909291905050506107e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102be57600080fd5b506102dd60048036038101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032b57600080fd5b50610360600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610854565b6040518082815260200191505060405180910390f35b34801561038257600080fd5b5061038b61089d565b005b34801561039957600080fd5b506103f4600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061096f565b005b34801561040257600080fd5b5061040b61099b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045957600080fd5b506104626109c4565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b506104bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a1b565b005b806005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561052d57600080fd5b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6004818154811015156105ee57fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069a5780601f1061066f5761010080835404028352916020019161069a565b820191906000526020600020905b81548152906001019060200180831161067d57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107c957503373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15156107d457600080fd5b6107df838383610a3a565b505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108a56109c4565b15156108b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061097a82610c18565b905060648181151561098857fe5b06810390506109978282610d06565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610a236109c4565b1515610a2e57600080fd5b610a3781610fd9565b50565b610a8d6001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110d390919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b236001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f190919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080826040516020018082805190602001908083835b602083101515610c545780518252602082019150602081019050602083039250610c2f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515610cbd5780518252602082019150602081019050602083039250610c98565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004905060025481811515610cfd57fe5b06915050919050565b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190610d9c92919061110a565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ee56001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110d390919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610f98578082015181840152602081019050610f7d565b50505050905090810190601f168015610fc55780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561101557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101515156110e757fe5b8091505092915050565b60008282111515156110ff57fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061114b57805160ff1916838001178555611179565b82800160010185558215611179579182015b8281111561117857825182559160200191906001019061115d565b5b509050611186919061118a565b5090565b6111ac91905b808211156111a8576000816000905550600101611190565b5090565b905600a165627a7a7230582091fb5fe7e25a22b825283770c3a9549c02dfa42cdea1210628272d9e9b0247d20029",
  "sourceMap": "59:640:7:-;;;389:2:6;372:19;;419:9;;413:2;:15;395:33;;452:9;432:29;;511:10:3;502:6;;:19;;;;;;;;;;;;;;;;;;565:6;;;;;;;;;;;532:40;;561:1;532:40;;;;;;;;;;;;59:640:7;;;;;;",
  "deployedSourceMap": "59:640:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:199:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:23:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:23:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;603:23:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:229:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:46:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;631:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:108:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:108:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:109:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:127:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1255:127:3;;;;;;1194:228:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1194:228:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:70:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;630:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;913:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1540:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:199:9;1041:8;273:13:6;:24;287:9;273:24;;;;;;;;;;;;;;;;;;;;;259:38;;:10;:38;;;251:47;;;;;;;;1087:9:9;1059:15;:25;1075:8;1059:25;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1141:8;1130:9;1109:41;;1118:10;1109:41;;;;;;;;;;;;958:199;;;:::o;603:23:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;725:229:9:-;854:10;827:37;;:13;:23;841:8;827:23;;;;;;;;;;;;;;;;;;;;;:37;;;:80;;;;897:10;868:39;;:15;:25;884:8;868:25;;;;;;;;;;;;;;;;;;;;;:39;;;827:80;818:90;;;;;;;;916:31;926:5;933:3;938:8;916:9;:31::i;:::-;725:229;;;:::o;631:46:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;325:108:9:-;383:7;405:13;:23;419:8;405:23;;;;;;;;;;;;;;;;;;;;;398:30;;325:108;;;:::o;212:109::-;270:7;292:16;:24;309:6;292:24;;;;;;;;;;;;;;;;285:31;;212:109;;;:::o;1255:127:3:-;813:9;:7;:9::i;:::-;805:18;;;;;;;;1349:1;1312:40;;1333:6;;;;;;;;;;;1312:40;;;;;;;;;;;;1375:1;1358:6;;:19;;;;;;;;;;;;;;;;;;1255:127::o;1194:228:6:-;1303:12;1318:25;1337:5;1318:18;:25::i;:::-;1303:40;;1379:3;1369:7;:13;;;;;;;;1359:7;:23;1349:33;;1388:29;1402:5;1409:7;1388:13;:29::i;:::-;1194:228;;:::o;630:70:3:-;667:7;689:6;;;;;;;;;;;682:13;;630:70;:::o;913:83::-;952:4;985:6;;;;;;;;;;;971:20;;:10;:20;;;964:27;;913:83;:::o;1540:101::-;813:9;:7;:9::i;:::-;805:18;;;;;;;;1608:28;1627:8;1608:18;:28::i;:::-;1540:101;:::o;437:284:9:-;540:28;566:1;540:16;:21;557:3;540:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;516:16;:21;533:3;516:21;;;;;;;;;;;;;;;:52;;;;605:35;638:1;605:16;:28;622:10;605:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;574:16;:28;591:10;574:28;;;;;;;;;;;;;;;:66;;;;672:3;646:13;:23;660:8;646:23;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;707:8;702:3;686:30;;695:5;686:30;;;;;;;;;;;;437:284;;;:::o;1029:161:6:-;1092:4;1104:9;1148:4;1131:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1131:22:6;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1131:22:6;;;1121:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1121:33:6;;;;;;;;;;;;;;;;1116:39;;;1104:51;;1175:10;;1168:4;:17;;;;;;;;1161:24;;1029:161;;;;:::o;728:297::-;791:7;874:1;801:7;814:56;;;;;;;;;821:5;814:56;;;;828:4;814:56;;;;834:1;814:56;;;;;;850:12;;844:3;:18;814:56;;;;;;865:1;814:56;;;;;;868:1;814:56;;;;;801:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;801:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;791:84;;901:10;881:13;:17;895:2;881:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;948:35;981:1;948:16;:28;965:10;948:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;917:16;:28;934:10;917:28;;;;;;;;;;;;;;;:66;;;;994:26;1004:2;1008:5;1015:4;994:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;994:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:297;;;:::o;1772:169:3:-;1861:1;1841:22;;:8;:22;;;;1833:31;;;;;;;;1904:8;1875:38;;1896:6;;;;;;;;;;;1875:38;;;;;;;;;;;;1928:8;1919:6;;:17;;;;;;;;;;;;;;;;;;1772:169;:::o;1006:129:4:-;1064:7;1079:9;1095:1;1091;:5;1079:17;;1114:1;1109;:6;;1102:14;;;;;;1129:1;1122:8;;1006:129;;;;;:::o;834:110::-;892:7;919:1;914;:6;;907:14;;;;;;938:1;934;:5;927:12;;834:110;;;;:::o;59:640:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.25;\n\nimport \"./zombieownership.sol\";\n\ncontract ZombieFeeding is ZombieOwnership {\n\n\n  function _triggerCooldown(Zombie storage _zombie) internal {\n    _zombie.readyTime = uint32(now + cooldownTime);\n  }\n\n  function _isReady(Zombie storage _zombie) internal view returns (bool) {\n      return (_zombie.readyTime <= now);\n  }\n\n  function feedAndMultiply(uint _zombieId, uint _targetDna) internal onlyOwnerOf(_zombieId) {\n    Zombie storage myZombie = zombies[_zombieId];\n    require(_isReady(myZombie));\n    // _targetDna = _targetDna % dnaModulus;\n    // uint newDna = (myZombie.dna + _targetDna) / 2;\n    // _createZombie(\"NoName\", newDna);\n    _triggerCooldown(myZombie);\n  }\n}\n",
  "sourcePath": "/Users/csuftitan/Documents/Cryptozombie demo package 2/contracts/zombiefeeding.sol",
  "ast": {
    "absolutePath": "project:/contracts/zombiefeeding.sol",
    "exportedSymbols": {
      "ZombieFeeding": [
        942
      ]
    },
    "id": 943,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 881,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "project:/contracts/zombieownership.sol",
        "file": "./zombieownership.sol",
        "id": 882,
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 1311,
        "src": "26:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 883,
              "name": "ZombieOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1310,
              "src": "85:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieOwnership_$1310",
                "typeString": "contract ZombieOwnership"
              }
            },
            "id": 884,
            "nodeType": "InheritanceSpecifier",
            "src": "85:15:7"
          }
        ],
        "contractDependencies": [
          54,
          310,
          879,
          1310
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 942,
        "linearizedBaseContracts": [
          942,
          1310,
          54,
          879,
          310
        ],
        "name": "ZombieFeeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "166:57:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 889,
                        "name": "_zombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "172:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "readyTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 760,
                      "src": "172:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 893,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "199:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 894,
                            "name": "cooldownTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "205:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "199:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "192:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": "uint32"
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "192:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "172:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "172:46:7"
                }
              ]
            },
            "documentation": null,
            "id": 900,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_triggerCooldown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "name": "_zombie",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "133:22:7",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                    "typeString": "struct ZombieFactory.Zombie"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 885,
                    "name": "Zombie",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 765,
                    "src": "133:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                      "typeString": "struct ZombieFactory.Zombie"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "132:24:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:0:7"
            },
            "scope": 942,
            "src": "107:116:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "298:46:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 907,
                            "name": "_zombie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "314:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 760,
                          "src": "314:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 909,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1327,
                          "src": "335:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "314:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 911,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "313:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 906,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "306:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 914,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_isReady",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "name": "_zombie",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "245:22:7",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                    "typeString": "struct ZombieFactory.Zombie"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 901,
                    "name": "Zombie",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 765,
                    "src": "245:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                      "typeString": "struct ZombieFactory.Zombie"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:24:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "292:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "291:6:7"
            },
            "scope": 942,
            "src": "227:117:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "438:259:7",
              "statements": [
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 941,
                      "src": "444:23:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 924,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 765,
                        "src": "444:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 929,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 926,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "470:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$765_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 928,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "478:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "470:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$765_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "444:44:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 932,
                            "name": "myZombie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "511:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          ],
                          "id": 931,
                          "name": "_isReady",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 914,
                          "src": "502:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Zombie_$765_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "502:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1328,
                        1329
                      ],
                      "referencedDeclaration": 1328,
                      "src": "494:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "494:27:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 937,
                        "name": "myZombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "683:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      ],
                      "id": 936,
                      "name": "_triggerCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "666:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$765_storage_ptr_$returns$__$",
                        "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "666:26:7"
                }
              ]
            },
            "documentation": null,
            "id": 941,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 921,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 916,
                    "src": "427:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 922,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 920,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 733,
                  "src": "415:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:22:7"
              }
            ],
            "name": "feedAndMultiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "373:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "name": "_targetDna",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "389:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:33:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:7"
            },
            "scope": 942,
            "src": "348:349:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 943,
        "src": "59:640:7"
      }
    ],
    "src": "0:700:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/zombiefeeding.sol",
      "exportedSymbols": {
        "ZombieFeeding": [
          942
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".25"
          ]
        },
        "id": 881,
        "name": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1311,
          "absolutePath": "project:/contracts/zombieownership.sol",
          "file": "./zombieownership.sol",
          "scope": 943,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 882,
        "name": "ImportDirective",
        "src": "26:31:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            54,
            310,
            879,
            1310
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            942,
            1310,
            54,
            879,
            310
          ],
          "name": "ZombieFeeding",
          "scope": 943
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieOwnership",
                  "referencedDeclaration": 1310,
                  "type": "contract ZombieOwnership"
                },
                "id": 883,
                "name": "UserDefinedTypeName",
                "src": "85:15:7"
              }
            ],
            "id": 884,
            "name": "InheritanceSpecifier",
            "src": "85:15:7"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_triggerCooldown",
              "payable": false,
              "scope": 942,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombie",
                      "scope": 900,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct ZombieFactory.Zombie",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Zombie",
                          "referencedDeclaration": 765,
                          "type": "struct ZombieFactory.Zombie"
                        },
                        "id": 885,
                        "name": "UserDefinedTypeName",
                        "src": "133:6:7"
                      }
                    ],
                    "id": 886,
                    "name": "VariableDeclaration",
                    "src": "133:22:7"
                  }
                ],
                "id": 887,
                "name": "ParameterList",
                "src": "132:24:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 888,
                "name": "ParameterList",
                "src": "166:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "readyTime",
                              "referencedDeclaration": 760,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 886,
                                  "type": "struct ZombieFactory.Zombie storage pointer",
                                  "value": "_zombie"
                                },
                                "id": 889,
                                "name": "Identifier",
                                "src": "172:7:7"
                              }
                            ],
                            "id": 891,
                            "name": "MemberAccess",
                            "src": "172:17:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint32)",
                                  "value": "uint32"
                                },
                                "id": 892,
                                "name": "ElementaryTypeNameExpression",
                                "src": "192:6:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1327,
                                      "type": "uint256",
                                      "value": "now"
                                    },
                                    "id": 893,
                                    "name": "Identifier",
                                    "src": "199:3:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 752,
                                      "type": "uint256",
                                      "value": "cooldownTime"
                                    },
                                    "id": 894,
                                    "name": "Identifier",
                                    "src": "205:12:7"
                                  }
                                ],
                                "id": 895,
                                "name": "BinaryOperation",
                                "src": "199:18:7"
                              }
                            ],
                            "id": 896,
                            "name": "FunctionCall",
                            "src": "192:26:7"
                          }
                        ],
                        "id": 897,
                        "name": "Assignment",
                        "src": "172:46:7"
                      }
                    ],
                    "id": 898,
                    "name": "ExpressionStatement",
                    "src": "172:46:7"
                  }
                ],
                "id": 899,
                "name": "Block",
                "src": "166:57:7"
              }
            ],
            "id": 900,
            "name": "FunctionDefinition",
            "src": "107:116:7"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_isReady",
              "payable": false,
              "scope": 942,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombie",
                      "scope": 914,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct ZombieFactory.Zombie",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Zombie",
                          "referencedDeclaration": 765,
                          "type": "struct ZombieFactory.Zombie"
                        },
                        "id": 901,
                        "name": "UserDefinedTypeName",
                        "src": "245:6:7"
                      }
                    ],
                    "id": 902,
                    "name": "VariableDeclaration",
                    "src": "245:22:7"
                  }
                ],
                "id": 903,
                "name": "ParameterList",
                "src": "244:24:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 914,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 904,
                        "name": "ElementaryTypeName",
                        "src": "292:4:7"
                      }
                    ],
                    "id": 905,
                    "name": "VariableDeclaration",
                    "src": "292:4:7"
                  }
                ],
                "id": 906,
                "name": "ParameterList",
                "src": "291:6:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 906
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "readyTime",
                                  "referencedDeclaration": 760,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 902,
                                      "type": "struct ZombieFactory.Zombie storage pointer",
                                      "value": "_zombie"
                                    },
                                    "id": 907,
                                    "name": "Identifier",
                                    "src": "314:7:7"
                                  }
                                ],
                                "id": 908,
                                "name": "MemberAccess",
                                "src": "314:17:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1327,
                                  "type": "uint256",
                                  "value": "now"
                                },
                                "id": 909,
                                "name": "Identifier",
                                "src": "335:3:7"
                              }
                            ],
                            "id": 910,
                            "name": "BinaryOperation",
                            "src": "314:24:7"
                          }
                        ],
                        "id": 911,
                        "name": "TupleExpression",
                        "src": "313:26:7"
                      }
                    ],
                    "id": 912,
                    "name": "Return",
                    "src": "306:33:7"
                  }
                ],
                "id": 913,
                "name": "Block",
                "src": "298:46:7"
              }
            ],
            "id": 914,
            "name": "FunctionDefinition",
            "src": "227:117:7"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "feedAndMultiply",
              "payable": false,
              "scope": 942,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 941,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 915,
                        "name": "ElementaryTypeName",
                        "src": "373:4:7"
                      }
                    ],
                    "id": 916,
                    "name": "VariableDeclaration",
                    "src": "373:14:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetDna",
                      "scope": 941,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 917,
                        "name": "ElementaryTypeName",
                        "src": "389:4:7"
                      }
                    ],
                    "id": 918,
                    "name": "VariableDeclaration",
                    "src": "389:15:7"
                  }
                ],
                "id": 919,
                "name": "ParameterList",
                "src": "372:33:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 923,
                "name": "ParameterList",
                "src": "438:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 733,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 920,
                    "name": "Identifier",
                    "src": "415:11:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 916,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 921,
                    "name": "Identifier",
                    "src": "427:9:7"
                  }
                ],
                "id": 922,
                "name": "ModifierInvocation",
                "src": "415:22:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        925
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myZombie",
                          "scope": 941,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 765,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 924,
                            "name": "UserDefinedTypeName",
                            "src": "444:6:7"
                          }
                        ],
                        "id": 925,
                        "name": "VariableDeclaration",
                        "src": "444:23:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 768,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 926,
                            "name": "Identifier",
                            "src": "470:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 916,
                              "type": "uint256",
                              "value": "_zombieId"
                            },
                            "id": 927,
                            "name": "Identifier",
                            "src": "478:9:7"
                          }
                        ],
                        "id": 928,
                        "name": "IndexAccess",
                        "src": "470:18:7"
                      }
                    ],
                    "id": 929,
                    "name": "VariableDeclarationStatement",
                    "src": "444:44:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1328,
                                1329
                              ],
                              "referencedDeclaration": 1328,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 930,
                            "name": "Identifier",
                            "src": "494:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                                      "typeString": "struct ZombieFactory.Zombie storage pointer"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 914,
                                  "type": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)",
                                  "value": "_isReady"
                                },
                                "id": 931,
                                "name": "Identifier",
                                "src": "502:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 925,
                                  "type": "struct ZombieFactory.Zombie storage pointer",
                                  "value": "myZombie"
                                },
                                "id": 932,
                                "name": "Identifier",
                                "src": "511:8:7"
                              }
                            ],
                            "id": 933,
                            "name": "FunctionCall",
                            "src": "502:18:7"
                          }
                        ],
                        "id": 934,
                        "name": "FunctionCall",
                        "src": "494:27:7"
                      }
                    ],
                    "id": 935,
                    "name": "ExpressionStatement",
                    "src": "494:27:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Zombie_$765_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 900,
                              "type": "function (struct ZombieFactory.Zombie storage pointer)",
                              "value": "_triggerCooldown"
                            },
                            "id": 936,
                            "name": "Identifier",
                            "src": "666:16:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 925,
                              "type": "struct ZombieFactory.Zombie storage pointer",
                              "value": "myZombie"
                            },
                            "id": 937,
                            "name": "Identifier",
                            "src": "683:8:7"
                          }
                        ],
                        "id": 938,
                        "name": "FunctionCall",
                        "src": "666:26:7"
                      }
                    ],
                    "id": 939,
                    "name": "ExpressionStatement",
                    "src": "666:26:7"
                  }
                ],
                "id": 940,
                "name": "Block",
                "src": "438:259:7"
              }
            ],
            "id": 941,
            "name": "FunctionDefinition",
            "src": "348:349:7"
          }
        ],
        "id": 942,
        "name": "ContractDefinition",
        "src": "59:640:7"
      }
    ],
    "id": 943,
    "name": "SourceUnit",
    "src": "0:700:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewZombie",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfbB431Ca38398a5EaD26b690b40eA9EBce13d1Fa",
      "transactionHash": "0x2dfacba8080a0e4d6a0562bc362ffbb7ccba8c5df681f5c78d8285b1cb0d36c6"
    },
    "11155111": {
      "events": {
        "0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewZombie",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDF7011a167423f2068224ee532d9B44b30Db9C08",
      "transactionHash": "0xecfcde397dfad4dc1cf40a84b92c2ddc4ace5379139279160ba69ad5468d281c"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-10-19T10:10:39.844Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}