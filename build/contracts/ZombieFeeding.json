{
  "contractName": "ZombieFeeding",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint256"
        },
        {
          "name": "experience",
          "type": "uint256"
        },
        {
          "name": "winCount",
          "type": "uint256"
        },
        {
          "name": "lossCount",
          "type": "uint256"
        },
        {
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "name": "ability",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint256\"},{\"name\":\"experience\",\"type\":\"uint256\"},{\"name\":\"winCount\",\"type\":\"uint256\"},{\"name\":\"lossCount\",\"type\":\"uint256\"},{\"name\":\"readyTime\",\"type\":\"uint32\"},{\"name\":\"ability\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/zombiefeeding.sol\":\"ZombieFeeding\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"project:/contracts/erc721.sol\":{\"keccak256\":\"0xe9218ffc43e18cf05b21a97e10db252a61e20e91467ef71bc1e4cc2ee6726a79\",\"urls\":[\"bzzr://cb9aa70f9302599935cf3dd423fe552c1d64a12ed5dd3dd37841fef9fa786742\"]},\"project:/contracts/zombiefactory.sol\":{\"keccak256\":\"0x5a4c20cabb011393e2167970e6b1771364f77082ebca5284216bf04586b1e651\",\"urls\":[\"bzzr://ee9a4a345ee6995a7e8341a2fd3fa106841073d0a7fda3e8308caecbe60c8ca1\"]},\"project:/contracts/zombiefeeding.sol\":{\"keccak256\":\"0x737d6bd895e0789f780218741cc11496583c7c8493f6db45537823b832353847\",\"urls\":[\"bzzr://aa70fbd11d252f91608f59c7fa1a2afaa582269629aec68ff14cf2afc4a70e44\"]},\"project:/contracts/zombieownership.sol\":{\"keccak256\":\"0x9a6561bc90d38f0cfba451777b00a9f049a04fd66393be5696581418d6939671\",\"urls\":[\"bzzr://ba47eab025a7f78d55853c3d38da6a932dc744960e4642da121ff868a7a90a94\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556001600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111b4806100666000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100a95780632052465e146100e957806323b872dd146101da578063528b7b8f1461023a5780636352211e146102a757806370a0823114610314578063715018a61461036b5780637bff0a01146103825780638da5cb5b146103eb578063f2fde38b14610442575b600080fd5b6100e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610485565b005b3480156100f557600080fd5b50610114600480360381019080803590602001909291905050506105a5565b60405180806020018981526020018881526020018781526020018681526020018581526020018463ffffffff1663ffffffff16815260200183600381111561015857fe5b60ff16815260200182810382528a818151815260200191508051906020019080838360005b8381101561019857808201518184015260208101905061017d565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610238600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b005b34801561024657600080fd5b5061026560048036038101908080359060200190929190505050610797565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b357600080fd5b506102d2600480360381019080803590602001909291905050506107ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032057600080fd5b50610355600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518082815260200191505060405180910390f35b34801561037757600080fd5b50610380610850565b005b34801561038e57600080fd5b506103e9600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610952565b005b3480156103f757600080fd5b5061040061097e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044e57600080fd5b50610483600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a3565b005b806005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104f357600080fd5b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6004818154811015156105b457fe5b9060005260206000209060070201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050908060010154908060020154908060030154908060040154908060050154908060060160009054906101000a900463ffffffff16908060060160049054906101000a900460ff16905088565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061077c57503373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b151561078757600080fd5b610792838383610a0a565b505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108ab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061095d82610be8565b905060648181151561096b57fe5b068103905061097a8282610cd6565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fe57600080fd5b610a0781610fb4565b50565b610a5d6001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ae90919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af36001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ca90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080826040516020018082805190602001908083835b602083101515610c245780518252602082019150602081019050602083039250610bff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515610c8d5780518252602082019150602081019050602083039250610c68565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004905060025481811515610ccd57fe5b06915050919050565b600080600483811515610ce557fe5b066003811115610cf157fe5b9150600160046101006040519081016040528087815260200186815260200160018152602001600081526020016000815260200160008152602001600354420163ffffffff168152602001856003811115610d4857fe5b815250908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000019080519060200190610d929291906110e3565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160060160046101000a81548160ff02191690836003811115610e1057fe5b02179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ebf6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ae90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78185856040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610f72578082015181840152602081019050610f57565b50505050905090810190601f168015610f9f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ff057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081830190508281101515156110c157fe5b80905092915050565b60008282111515156110d857fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061112457805160ff1916838001178555611152565b82800160010185558215611152579182015b82811115611151578251825591602001919060010190611136565b5b50905061115f9190611163565b5090565b61118591905b80821115611181576000816000905550600101611169565b5090565b905600a165627a7a72305820ed52566cb0dd2d8b49ca8f4082218306013ac7a6eec052c227ae2bb8764e8edb0029",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100a95780632052465e146100e957806323b872dd146101da578063528b7b8f1461023a5780636352211e146102a757806370a0823114610314578063715018a61461036b5780637bff0a01146103825780638da5cb5b146103eb578063f2fde38b14610442575b600080fd5b6100e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610485565b005b3480156100f557600080fd5b50610114600480360381019080803590602001909291905050506105a5565b60405180806020018981526020018881526020018781526020018681526020018581526020018463ffffffff1663ffffffff16815260200183600381111561015857fe5b60ff16815260200182810382528a818151815260200191508051906020019080838360005b8381101561019857808201518184015260208101905061017d565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610238600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b005b34801561024657600080fd5b5061026560048036038101908080359060200190929190505050610797565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b357600080fd5b506102d2600480360381019080803590602001909291905050506107ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032057600080fd5b50610355600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518082815260200191505060405180910390f35b34801561037757600080fd5b50610380610850565b005b34801561038e57600080fd5b506103e9600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610952565b005b3480156103f757600080fd5b5061040061097e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044e57600080fd5b50610483600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a3565b005b806005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104f357600080fd5b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6004818154811015156105b457fe5b9060005260206000209060070201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050908060010154908060020154908060030154908060040154908060050154908060060160009054906101000a900463ffffffff16908060060160049054906101000a900460ff16905088565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061077c57503373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b151561078757600080fd5b610792838383610a0a565b505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108ab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061095d82610be8565b905060648181151561096b57fe5b068103905061097a8282610cd6565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fe57600080fd5b610a0781610fb4565b50565b610a5d6001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ae90919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af36001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ca90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080826040516020018082805190602001908083835b602083101515610c245780518252602082019150602081019050602083039250610bff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515610c8d5780518252602082019150602081019050602083039250610c68565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004905060025481811515610ccd57fe5b06915050919050565b600080600483811515610ce557fe5b066003811115610cf157fe5b9150600160046101006040519081016040528087815260200186815260200160018152602001600081526020016000815260200160008152602001600354420163ffffffff168152602001856003811115610d4857fe5b815250908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000019080519060200190610d929291906110e3565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160060160046101000a81548160ff02191690836003811115610e1057fe5b02179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ebf6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ae90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78185856040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610f72578082015181840152602081019050610f57565b50505050905090810190601f168015610f9f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ff057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081830190508281101515156110c157fe5b80905092915050565b60008282111515156110d857fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061112457805160ff1916838001178555611152565b82800160010185558215611152579182015b82811115611151578251825591602001919060010190611136565b5b50905061115f9190611163565b5090565b61118591905b80821115611181576000816000905550600101611169565b5090565b905600a165627a7a72305820ed52566cb0dd2d8b49ca8f4082218306013ac7a6eec052c227ae2bb8764e8edb0029",
  "sourceMap": "59:640:12:-;;;402:2:11;385:19;;432:9;;426:2;:15;408:33;;465:9;445:29;;575:10:1;567:5;;:18;;;;;;;;;;;;;;;;;;59:640:12;;;;;;",
  "deployedSourceMap": "59:640:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:199:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:23:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;712:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:229:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:46:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;740:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:108:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:108:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:109:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:1;;;;;;1364:228:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1364:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:199:14;1041:8;286:13:11;:24;300:9;286:24;;;;;;;;;;;;;;;;;;;;;272:38;;:10;:38;;;264:47;;;;;;;;1087:9:14;1059:15;:25;1075:8;1059:25;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1141:8;1130:9;1109:41;;1118:10;1109:41;;;;;;;;;;;;958:199;;;:::o;712:23:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;725:229:14:-;854:10;827:37;;:13;:23;841:8;827:23;;;;;;;;;;;;;;;;;;;;;:37;;;:80;;;;897:10;868:39;;:15;:25;884:8;868:25;;;;;;;;;;;;;;;;;;;;;:39;;;827:80;818:90;;;;;;;;916:31;926:5;933:3;938:8;916:9;:31::i;:::-;725:229;;;:::o;740:46:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;325:108:14:-;383:7;405:13;:23;419:8;405:23;;;;;;;;;;;;;;;;;;;;;398:30;;325:108;;;:::o;212:109::-;270:7;292:16;:24;309:6;292:24;;;;;;;;;;;;;;;;285:31;;212:109;;;:::o;1001:111:1:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1364:228:11:-;1473:12;1488:25;1507:5;1488:18;:25::i;:::-;1473:40;;1549:3;1539:7;:13;;;;;;;;1529:7;:23;1519:33;;1558:29;1572:5;1579:7;1558:13;:29::i;:::-;1364:228;;:::o;238:20:1:-;;;;;;;;;;;;;:::o;1274:103::-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;437:284:14:-;540:28;566:1;540:16;:21;557:3;540:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;516:16;:21;533:3;516:21;;;;;;;;;;;;;;;:52;;;;605:35;638:1;605:16;:28;622:10;605:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;574:16;:28;591:10;574:28;;;;;;;;;;;;;;;:66;;;;672:3;646:13;:23;660:8;646:23;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;707:8;702:3;686:30;;695:5;686:30;;;;;;;;;;;;437:284;;;:::o;1199:161:11:-;1262:4;1274:9;1318:4;1301:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1301:22:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1301:22:11;;;1291:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1291:33:11;;;;;;;;;;;;;;;;1286:39;;;1274:51;;1345:10;;1338:4;:17;;;;;;;;1331:24;;1199:161;;;;:::o;837:358::-;900:16;948:7;940:1;932:4;927:14;;;;;;;;919:23;;;;;;;;900:42;;1044:1;958:7;971:69;;;;;;;;;978:5;971:69;;;;985:4;971:69;;;;991:1;971:69;;;;994:1;971:69;;;;997:1;971:69;;;;1000:1;971:69;;;;1016:12;;1010:3;:18;971:69;;;;;;1031:8;971:69;;;;;;;;;;;958:83;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;958:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:87;948:97;;1071:10;1051:13;:17;1065:2;1051:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1118:35;1151:1;1118:16;:28;1135:10;1118:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;1087:16;:28;1104:10;1087:28;;;;;;;;;;;;;;;:66;;;;1164:26;1174:2;1178:5;1185:4;1164:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1164:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:358;;;;:::o;1512:171:1:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;1238:128:0:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1060:116::-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;59:640:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.25;\n\nimport \"./zombieownership.sol\";\n\ncontract ZombieFeeding is ZombieOwnership {\n\n\n  function _triggerCooldown(Zombie storage _zombie) internal {\n    _zombie.readyTime = uint32(now + cooldownTime);\n  }\n\n  function _isReady(Zombie storage _zombie) internal view returns (bool) {\n      return (_zombie.readyTime <= now);\n  }\n\n  function feedAndMultiply(uint _zombieId, uint _targetDna) internal onlyOwnerOf(_zombieId) {\n    Zombie storage myZombie = zombies[_zombieId];\n    require(_isReady(myZombie));\n    // _targetDna = _targetDna % dnaModulus;\n    // uint newDna = (myZombie.dna + _targetDna) / 2;\n    // _createZombie(\"NoName\", newDna);\n    _triggerCooldown(myZombie);\n  }\n}\n",
  "sourcePath": "/Users/csuftitan/Documents/Cryptozombie demo package 2/contracts/zombiefeeding.sol",
  "ast": {
    "absolutePath": "project:/contracts/zombiefeeding.sol",
    "exportedSymbols": {
      "ZombieFeeding": [
        1320
      ]
    },
    "id": 1321,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1259,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "absolutePath": "project:/contracts/zombieownership.sol",
        "file": "./zombieownership.sol",
        "id": 1260,
        "nodeType": "ImportDirective",
        "scope": 1321,
        "sourceUnit": 1736,
        "src": "26:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1261,
              "name": "ZombieOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1735,
              "src": "85:15:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieOwnership_$1735",
                "typeString": "contract ZombieOwnership"
              }
            },
            "id": 1262,
            "nodeType": "InheritanceSpecifier",
            "src": "85:15:12"
          }
        ],
        "contractDependencies": [
          179,
          740,
          1257,
          1735
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1320,
        "linearizedBaseContracts": [
          1320,
          1735,
          740,
          1257,
          179
        ],
        "name": "ZombieFeeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "166:57:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1267,
                        "name": "_zombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "172:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "readyTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "172:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1271,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "199:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1272,
                            "name": "cooldownTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "205:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "199:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "192:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": "uint32"
                      },
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "192:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "172:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "172:46:12"
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_triggerCooldown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1264,
                  "name": "_zombie",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "133:22:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                    "typeString": "struct ZombieFactory.Zombie"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1263,
                    "name": "Zombie",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "133:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                      "typeString": "struct ZombieFactory.Zombie"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "132:24:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:0:12"
            },
            "scope": 1320,
            "src": "107:116:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "298:46:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1285,
                            "name": "_zombie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "314:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          },
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1128,
                          "src": "314:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1287,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "335:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "314:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1289,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "313:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1284,
                  "id": 1290,
                  "nodeType": "Return",
                  "src": "306:33:12"
                }
              ]
            },
            "documentation": null,
            "id": 1292,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_isReady",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "name": "_zombie",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "245:22:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                    "typeString": "struct ZombieFactory.Zombie"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1279,
                    "name": "Zombie",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "245:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                      "typeString": "struct ZombieFactory.Zombie"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:24:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "292:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "291:6:12"
            },
            "scope": 1320,
            "src": "227:117:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "438:259:12",
              "statements": [
                {
                  "assignments": [
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1303,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "444:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1302,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1131,
                        "src": "444:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1307,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1304,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "470:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$1131_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 1306,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1305,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "478:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "470:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$1131_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "444:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1310,
                            "name": "myZombie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1303,
                            "src": "511:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          ],
                          "id": 1309,
                          "name": "_isReady",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1292,
                          "src": "502:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Zombie_$1131_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "502:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1753,
                        1754
                      ],
                      "referencedDeclaration": 1753,
                      "src": "494:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1313,
                  "nodeType": "ExpressionStatement",
                  "src": "494:27:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1315,
                        "name": "myZombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "683:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      ],
                      "id": 1314,
                      "name": "_triggerCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "666:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$1131_storage_ptr_$returns$__$",
                        "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "666:26:12"
                }
              ]
            },
            "documentation": null,
            "id": 1319,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1299,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1294,
                    "src": "427:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1300,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1298,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1090,
                  "src": "415:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:22:12"
              }
            ],
            "name": "feedAndMultiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1294,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "373:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1296,
                  "name": "_targetDna",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "389:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:33:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:12"
            },
            "scope": 1320,
            "src": "348:349:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1321,
        "src": "59:640:12"
      }
    ],
    "src": "0:700:12"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/zombiefeeding.sol",
      "exportedSymbols": {
        "ZombieFeeding": [
          1320
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".25"
          ]
        },
        "id": 1259,
        "name": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "attributes": {
          "SourceUnit": 1736,
          "absolutePath": "project:/contracts/zombieownership.sol",
          "file": "./zombieownership.sol",
          "scope": 1321,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1260,
        "name": "ImportDirective",
        "src": "26:31:12"
      },
      {
        "attributes": {
          "contractDependencies": [
            179,
            740,
            1257,
            1735
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1320,
            1735,
            740,
            1257,
            179
          ],
          "name": "ZombieFeeding",
          "scope": 1321
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieOwnership",
                  "referencedDeclaration": 1735,
                  "type": "contract ZombieOwnership"
                },
                "id": 1261,
                "name": "UserDefinedTypeName",
                "src": "85:15:12"
              }
            ],
            "id": 1262,
            "name": "InheritanceSpecifier",
            "src": "85:15:12"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_triggerCooldown",
              "payable": false,
              "scope": 1320,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombie",
                      "scope": 1278,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct ZombieFactory.Zombie",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Zombie",
                          "referencedDeclaration": 1131,
                          "type": "struct ZombieFactory.Zombie"
                        },
                        "id": 1263,
                        "name": "UserDefinedTypeName",
                        "src": "133:6:12"
                      }
                    ],
                    "id": 1264,
                    "name": "VariableDeclaration",
                    "src": "133:22:12"
                  }
                ],
                "id": 1265,
                "name": "ParameterList",
                "src": "132:24:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1266,
                "name": "ParameterList",
                "src": "166:0:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "readyTime",
                              "referencedDeclaration": 1128,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1264,
                                  "type": "struct ZombieFactory.Zombie storage pointer",
                                  "value": "_zombie"
                                },
                                "id": 1267,
                                "name": "Identifier",
                                "src": "172:7:12"
                              }
                            ],
                            "id": 1269,
                            "name": "MemberAccess",
                            "src": "172:17:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint32)",
                                  "value": "uint32"
                                },
                                "id": 1270,
                                "name": "ElementaryTypeNameExpression",
                                "src": "192:6:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1752,
                                      "type": "uint256",
                                      "value": "now"
                                    },
                                    "id": 1271,
                                    "name": "Identifier",
                                    "src": "199:3:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1109,
                                      "type": "uint256",
                                      "value": "cooldownTime"
                                    },
                                    "id": 1272,
                                    "name": "Identifier",
                                    "src": "205:12:12"
                                  }
                                ],
                                "id": 1273,
                                "name": "BinaryOperation",
                                "src": "199:18:12"
                              }
                            ],
                            "id": 1274,
                            "name": "FunctionCall",
                            "src": "192:26:12"
                          }
                        ],
                        "id": 1275,
                        "name": "Assignment",
                        "src": "172:46:12"
                      }
                    ],
                    "id": 1276,
                    "name": "ExpressionStatement",
                    "src": "172:46:12"
                  }
                ],
                "id": 1277,
                "name": "Block",
                "src": "166:57:12"
              }
            ],
            "id": 1278,
            "name": "FunctionDefinition",
            "src": "107:116:12"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_isReady",
              "payable": false,
              "scope": 1320,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombie",
                      "scope": 1292,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct ZombieFactory.Zombie",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Zombie",
                          "referencedDeclaration": 1131,
                          "type": "struct ZombieFactory.Zombie"
                        },
                        "id": 1279,
                        "name": "UserDefinedTypeName",
                        "src": "245:6:12"
                      }
                    ],
                    "id": 1280,
                    "name": "VariableDeclaration",
                    "src": "245:22:12"
                  }
                ],
                "id": 1281,
                "name": "ParameterList",
                "src": "244:24:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1292,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1282,
                        "name": "ElementaryTypeName",
                        "src": "292:4:12"
                      }
                    ],
                    "id": 1283,
                    "name": "VariableDeclaration",
                    "src": "292:4:12"
                  }
                ],
                "id": 1284,
                "name": "ParameterList",
                "src": "291:6:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1284
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "readyTime",
                                  "referencedDeclaration": 1128,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1280,
                                      "type": "struct ZombieFactory.Zombie storage pointer",
                                      "value": "_zombie"
                                    },
                                    "id": 1285,
                                    "name": "Identifier",
                                    "src": "314:7:12"
                                  }
                                ],
                                "id": 1286,
                                "name": "MemberAccess",
                                "src": "314:17:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1752,
                                  "type": "uint256",
                                  "value": "now"
                                },
                                "id": 1287,
                                "name": "Identifier",
                                "src": "335:3:12"
                              }
                            ],
                            "id": 1288,
                            "name": "BinaryOperation",
                            "src": "314:24:12"
                          }
                        ],
                        "id": 1289,
                        "name": "TupleExpression",
                        "src": "313:26:12"
                      }
                    ],
                    "id": 1290,
                    "name": "Return",
                    "src": "306:33:12"
                  }
                ],
                "id": 1291,
                "name": "Block",
                "src": "298:46:12"
              }
            ],
            "id": 1292,
            "name": "FunctionDefinition",
            "src": "227:117:12"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "feedAndMultiply",
              "payable": false,
              "scope": 1320,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 1319,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1293,
                        "name": "ElementaryTypeName",
                        "src": "373:4:12"
                      }
                    ],
                    "id": 1294,
                    "name": "VariableDeclaration",
                    "src": "373:14:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetDna",
                      "scope": 1319,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1295,
                        "name": "ElementaryTypeName",
                        "src": "389:4:12"
                      }
                    ],
                    "id": 1296,
                    "name": "VariableDeclaration",
                    "src": "389:15:12"
                  }
                ],
                "id": 1297,
                "name": "ParameterList",
                "src": "372:33:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1301,
                "name": "ParameterList",
                "src": "438:0:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1090,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 1298,
                    "name": "Identifier",
                    "src": "415:11:12"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1294,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 1299,
                    "name": "Identifier",
                    "src": "427:9:12"
                  }
                ],
                "id": 1300,
                "name": "ModifierInvocation",
                "src": "415:22:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1303
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myZombie",
                          "scope": 1319,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 1131,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 1302,
                            "name": "UserDefinedTypeName",
                            "src": "444:6:12"
                          }
                        ],
                        "id": 1303,
                        "name": "VariableDeclaration",
                        "src": "444:23:12"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1134,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 1304,
                            "name": "Identifier",
                            "src": "470:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1294,
                              "type": "uint256",
                              "value": "_zombieId"
                            },
                            "id": 1305,
                            "name": "Identifier",
                            "src": "478:9:12"
                          }
                        ],
                        "id": 1306,
                        "name": "IndexAccess",
                        "src": "470:18:12"
                      }
                    ],
                    "id": 1307,
                    "name": "VariableDeclarationStatement",
                    "src": "444:44:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1753,
                                1754
                              ],
                              "referencedDeclaration": 1753,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1308,
                            "name": "Identifier",
                            "src": "494:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                                      "typeString": "struct ZombieFactory.Zombie storage pointer"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1292,
                                  "type": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)",
                                  "value": "_isReady"
                                },
                                "id": 1309,
                                "name": "Identifier",
                                "src": "502:8:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1303,
                                  "type": "struct ZombieFactory.Zombie storage pointer",
                                  "value": "myZombie"
                                },
                                "id": 1310,
                                "name": "Identifier",
                                "src": "511:8:12"
                              }
                            ],
                            "id": 1311,
                            "name": "FunctionCall",
                            "src": "502:18:12"
                          }
                        ],
                        "id": 1312,
                        "name": "FunctionCall",
                        "src": "494:27:12"
                      }
                    ],
                    "id": 1313,
                    "name": "ExpressionStatement",
                    "src": "494:27:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Zombie_$1131_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1278,
                              "type": "function (struct ZombieFactory.Zombie storage pointer)",
                              "value": "_triggerCooldown"
                            },
                            "id": 1314,
                            "name": "Identifier",
                            "src": "666:16:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1303,
                              "type": "struct ZombieFactory.Zombie storage pointer",
                              "value": "myZombie"
                            },
                            "id": 1315,
                            "name": "Identifier",
                            "src": "683:8:12"
                          }
                        ],
                        "id": 1316,
                        "name": "FunctionCall",
                        "src": "666:26:12"
                      }
                    ],
                    "id": 1317,
                    "name": "ExpressionStatement",
                    "src": "666:26:12"
                  }
                ],
                "id": 1318,
                "name": "Block",
                "src": "438:259:12"
              }
            ],
            "id": 1319,
            "name": "FunctionDefinition",
            "src": "348:349:12"
          }
        ],
        "id": 1320,
        "name": "ContractDefinition",
        "src": "59:640:12"
      }
    ],
    "id": 1321,
    "name": "SourceUnit",
    "src": "0:700:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewZombie",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfbB431Ca38398a5EaD26b690b40eA9EBce13d1Fa",
      "transactionHash": "0x2dfacba8080a0e4d6a0562bc362ffbb7ccba8c5df681f5c78d8285b1cb0d36c6"
    },
    "11155111": {
      "events": {
        "0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewZombie",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDF7011a167423f2068224ee532d9B44b30Db9C08",
      "transactionHash": "0xecfcde397dfad4dc1cf40a84b92c2ddc4ace5379139279160ba69ad5468d281c"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-10-19T19:38:25.502Z",
  "devdoc": {
    "methods": {
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}